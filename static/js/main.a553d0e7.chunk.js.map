{"version":3,"sources":["components/Dropdown/Dropdown.tsx","data/weekDays.ts","components/SalaryCalc/SalaryCalc.tsx","data/weekList.ts","data/employeeList.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Dropdown","value","option","label","onChange","useState","open","setOpen","button","useRef","className","onMouseLeave","src","alt","ref","onClick","map","item","current","focus","Math","random","weekDays","workedHoursAndSalary","hours","salary","SalaryCalc","update","weeksSheets","index","day","floor","weekend","data","setData","totalHoursAndSalary","setTotalHoursAndSalary","loading","setLoading","useEffect","newTotal","forEach","timeOut","setTimeout","clearTimeout","type","min","max","onKeyPress","e","test","key","preventDefault","Number","target","newData","clickHandle","id","htmlFor","toFixed","getWeekList","now","moment","monday","clone","weekday","sunday","format","pickRandomEmployee","list","names","length","randomNames","push","Set","employeeList","employee","weekList","App","weeks","userData","setUserData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a553d0e7.chunk.js","sourcesContent":["/* eslint-disable no-restricted-globals */\n\nimport React, { useState, useRef } from 'react';\n\nimport './Dropdown.scss';\n\ntype Props = {\n  value: string;\n  option: string[];\n  label: string;\n  onChange:(value:string)=> void\n};\n\nconst Dropdown: React.FC<Props> = ({\n  value, option, label, onChange,\n}) => {\n  const [open, setOpen] = useState(false);\n  const button = useRef<HTMLButtonElement>(null);\n\n  return (\n    <div className=\"dropdown\" onMouseLeave={() => setOpen(false)}>\n      <div className=\"button__wrapper\">\n        <img className=\"dropdown__user\" src=\"employee.png\" alt=\"userimage\" />\n        <button\n          className=\"dropdown__button\"\n          ref={button}\n          onClick={() => setOpen(!open)}\n        >\n          {value}\n        </button>\n        <span className=\"dropdown__label\">{label}</span>\n      </div>\n\n      <div className={open ? 'dropdown__list active' : 'dropdown__list'}>\n        {option.map((item) => (\n          <div\n            className=\"dropdown__list--item\"\n            key={Math.random()}\n            onClick={() => {\n              onChange(item);\n              setOpen(!open);\n              button.current?.focus();\n            }}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","const weekDays:string[] = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\n\nexport default weekDays;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport weekDays from '../../data/weekDays';\nimport './SalaryCalc.scss';\n\ntype Props = {\n  update: boolean;\n};\n\ntype WeeksSheet = {\n  day: string;\n  hours: number;\n  weekend: boolean;\n};\n\nconst workedHoursAndSalary = { hours: 0, salary: 0 };\n\nconst SalaryCalc: React.FC<Props> = ({ update }) => {\n  const weeksSheets = weekDays.map((item, index) => ({\n    day: item,\n    hours: Math.floor(Math.random() * (8 - 0 + 1) + 0),\n    weekend: index === 5 || index === 6,\n  }));\n\n  const [data, setData] = useState<WeeksSheet[]>(weeksSheets);\n  const [totalHoursAndSalary, setTotalHoursAndSalary] = useState(workedHoursAndSalary);\n  const [loading, setLoading] = useState(false);\n\n  const clickHandle = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    index: number,\n  ):void => {\n    const value = Number(e.target.value);\n    const newData = [...data];\n    newData[index].hours = value;\n    setData(newData);\n  };\n\n  useEffect(() => {\n    const newTotal = { hours: 0, salary: 0 };\n\n    data.forEach((item) => {\n      newTotal.hours += item.hours;\n      newTotal.salary += item.hours * (item.weekend ? 20 : 10);\n    });\n\n    setTotalHoursAndSalary(newTotal);\n  }, [data]);\n\n  useEffect(() => {\n    setData(weeksSheets);\n  }, [update]);\n\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      setLoading(false);\n    }, 500);\n\n    return () => {\n      setLoading(true);\n      clearTimeout(timeOut);\n    };\n  }, [data, update]);\n\n  return (\n    <div className=\"content\">\n      <div>\n        {data.map((item, index) => (\n          <div className=\"inputs__list\" key={item.day}>\n            <div className=\"input__wrapper\">\n              <input\n                className=\"input\"\n                type=\"number\"\n                min=\"0\"\n                max=\"12\"\n                onKeyPress={(e) => {\n                  if (!/[0-9]/.test(e.key)) {\n                    e.preventDefault();\n                  }\n                }}\n                onChange={(e) => {\n                  clickHandle(e, index);\n                }}\n                value={item.hours}\n                id={item.day}\n              />\n              <label className=\"input__label\" htmlFor={item.day}>\n                {item.day}\n              </label>\n            </div>\n\n            <span className=\"input__salary\">\n              {!loading\n                ? `€${(item.hours * (item.weekend ? 20 : 10)).toFixed(2)}`\n                : 0}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"total\">\n        <div className=\"total__hours\">\n          <span>Hours worked</span>\n          <span>{totalHoursAndSalary.hours}</span>\n        </div>\n        <div className=\"total__salary\">\n          <span>Salary</span>\n          <span>\n            {!loading ? `€${totalHoursAndSalary.salary.toFixed(2)}` : 0}\n          </span>\n        </div>\n      </div>\n\n      {loading ? (\n        <img\n          className=\"loading__image\"\n          src=\"loading.gif\"\n          alt=\"loading\"\n        />\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nexport default SalaryCalc;\n","/* eslint-disable max-len */\nimport moment from 'moment';\n\nconst getWeekList = (): string[] => {\n  const now = moment();\n  const monday = now.clone().weekday(1);\n  const sunday = now.clone().weekday(7);\n  const weekList: string[] = [\n    `${monday.format('DD MMM YYYY')} - ${sunday.format('DD MMM YYYY')}`,\n    `${moment(monday).clone().weekday(-6).format('DD MMM YYYY')} - ${moment(monday).clone().weekday(0).format('DD MMM YYYY')}`,\n    `${moment(monday).clone().weekday(-13).format('DD MMM YYYY')} - ${moment(monday).clone().weekday(-7).format('DD MMM YYYY')}`,\n    `${moment(monday).clone().weekday(-20).format('DD MMM YYYY')} - ${moment(monday).clone().weekday(-14).format('DD MMM YYYY')}`,\n    `${moment(monday).clone().weekday(-27).format('DD MMM YYYY')} - ${moment(monday).clone().weekday(-21).format('DD MMM YYYY')}`,\n  ];\n  return weekList;\n};\n\nexport default getWeekList;\n","export const employeeList: string[] = [\n  'Willow Hackett',\n  'Spike Fuentes',\n  'Rizwan England',\n  ' Tyler - Jay Wall',\n  '  Jayden Head',\n  ' Dewey Fuller',\n  '  Nazim Reid',\n  '  Nicky North',\n  '  Gruffydd Singh',\n  ' Rickie Arellano',\n  ' Dorian Stone',\n  '  Kian Hayden',\n  ' Hughie Hays',\n  '  Elvis Glover',\n  ' Ahmad Bender',\n  ' Barnaby Vargas',\n  '  Jeevan Mills',\n  ' Kyle Wade',\n  ' Jaye Bell',\n  ' Tasha Vinson',\n  ' Kaison Galindo',\n  ' David Mathews',\n  'Simon Rios',\n  ' Shelley Ventura',\n  'Derrick Liu',\n  ' Kaleem Kendall',\n  ' Kameron Hamilton',\n  ' Garry Davenport',\n  ' Ieuan Lester',\n  'Rikki Christensen',\n  'Austin Stacey',\n  ' Adrian Bowler',\n  ' Jaidan Bryant',\n  'Willem Swift',\n  ' Nial Langley',\n  'Aaron Chester',\n  'Yahya Herrera',\n  'Ronan Fountain',\n  ' Hunter Steadman',\n];\n\nexport const pickRandomEmployee = (list: string[]): string[] => {\n  let names: string[] = [];\n\n  while (names.length < 5) {\n    const randomNames = list[Math.floor(Math.random() * list.length)];\n    names.push(randomNames);\n    const checkDublicate = [...new Set(names)];\n    names = checkDublicate;\n  }\n\n  return names;\n};\n\nexport default employeeList;\n","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport Dropdown from './components/Dropdown/Dropdown';\nimport SalaryCalc from './components/SalaryCalc/SalaryCalc';\nimport getWeekList from './data/weekList';\nimport employeeList, { pickRandomEmployee } from './data/employeeList';\n\nconst employee = pickRandomEmployee(employeeList);\nconst weekList = getWeekList();\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    employee: employee[0],\n    weeks: weekList[0],\n  });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      setLoading(false);\n    }, 50);\n\n    return () => {\n      setLoading(true);\n      clearTimeout(timeOut);\n    };\n  }, [userData]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"dropdown__wrapper\">\n        <Dropdown\n          option={pickRandomEmployee(employeeList)}\n          value={userData.employee}\n          onChange={(value) => setUserData({ ...userData, employee: value })}\n          label=\"Employee\"\n        />\n        <Dropdown\n          option={weekList}\n          value={userData.weeks}\n          onChange={(value) => setUserData({ ...userData, weeks: value })}\n          label=\"Week\"\n        />\n      </div>\n      <SalaryCalc update={loading} />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}